<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
		
		

	<!-- 1) USE ANNOTATIONS TO CONFIGURE SPRING BEANS -->

	<context:property-placeholder location="classpath:batchconfig.properties"  ignore-unresolvable="true"/> 
	<context:component-scan base-package="org.com" />
	
	<bean class="org.jasypt.spring.properties.EncryptablePropertyPlaceholderConfigurer">
   		<constructor-arg ref="configurationEncryptor" />
		<property name="locations">
			<list>
				<value>classpath:batchconfig.propertie</value>
			</list>
		</property>
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="order" value="1" />
	</bean>

	<bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
		<property name="config" ref="environmentVariablesConfiguration" />
	</bean>
	<bean id="environmentVariablesConfiguration" class="org..options.xwalk.utils.SystemEnvUtils">
   		<property name="algorithm" value="PBEWithMD5AndDES" />
   		<property name="passwordEnvName" value="APP_ENCRYPTION_PASSWORD" />
 	</bean>

<!-- 2) DATASOURCE, TRANSACTION MANAGER AND JDBC TEMPLATE -->

<bean id="dataSource" class="oracle.jdbc.pool.OracleDataSource">
 
<!-- 		<property name="driverClassName" value="${ods.jdbc.driver}" /> -->
		<property name="URL" value="${ods.jdbc.url}" />
		<property name="user" value="${ods.jdbc.user}" />
		<property name="password" value="${ods.jdbc.password}" />
		<property name="driverType" value="thin" />
	</bean>
	
    <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- <tx:annotation-driven transaction-manager="transactionManager" />-->

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 3) JOB REPOSITORY  -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<!-- 4) LAUNCH JOBS FROM A REPOSITORY -->
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
	
	

	<!-- 5) Define the job and its steps. In our case I use one step. Configure 
 its readers and writers -->
	<batch:job id="Students">
		<batch:listeners>
			<batch:listener ref="appJobExecutionListener" />
		</batch:listeners>
		<batch:step id="step1">
			<batch:tasklet>
				<batch:listeners>
					<batch:listener ref="itemFailureLoggerListener" />
				</batch:listeners>
				<batch:chunk reader="itemReader" writer="itemWriter"
					commit-interval="160000" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- ======================================================= -->
	<!-- 6) READER -->
	<!-- ======================================================= -->
	<bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
	       <!-- <property name="resource" value="classpath:uocon.txt" />!-->
	    <!-- property name="linesToSkip" value="1" / --> 
            <property name="resource" value="file:${uocon.response.filename}" />
	    <property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names"
							value="class_id,pin,section,Grade" />
						<property name="columns" value="1,13,27,35" />
				 </bean>
				</property>
				<property name="fieldSetMapper" ref="studentMapper" />
			</bean>
		</property>
	</bean>
</beans>

